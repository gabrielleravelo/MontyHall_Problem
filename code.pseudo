BEGIN
    SEQUENCE Statistics constructor()
		SET gamesWithSameDoorWon;
		SET gamesWithDoorChangeWon;
	END SEQUENCE
	
	SEQUENCE Game constructor()
       	SET doors;
		SET doorPicked;
		SET openedGoatDoor;
		SET finalPick;
		SET won;
	END SEQUENCE

	SEQUENCE Door constructor(number)
       	SET number;
		SET isCar;
		SET opened;
	END SEQUENCE
	
	SEQUENCE  OPEN a new game
		SET nbSimulation;
		SET stat TO new Statistics;
		SET stat.gamesWithSameDoorWon TO 0;
		SET stat.gamesWithDoorChangeWon TO 0;

		FOR ( SET j FROM 0 TO nbSimulation; INCREMENT j)
			SET game TO new Game();
			SET newdoor;
			SET game.doors TO [];
			FOR (SET i FROM 0 TO 3; INCREMENT i)
				SET newdoor TO new Door(i);
				SET game.doors.push(newdoor);
			END FOR

			DEFINE function randomIndex;

			SET carDoor TO game.doors[randomIndex];

			SET game.doorPicked TO game.doors[randomIndex];

			SEQUENCE OPEN a goat door
				SET goatDoor TO game.doors.filter (obj.isCar EQUAL TO false);
				SET goatNumber TO randomIndex(goatDoor.length);
				SET game.openedGoatDoor TO goatDoor[goatNumber];
				IF game.doorPicked EQUAL TO game.openedGoatDoor THEN
					game.openedGoatDoor EQUAL TO goatDoor[+!goatNumber];
				END IF
			END SEQUENCE

			SEQUENCE OPEN a final pick door
				SET closeDoor EQUAL TO game.doors.filter(obj.number IS NOT game.openedGoatDoor.number);
    			SET closeNumber EQUAL TO randomIndex(closeDoor.length);
    			SET game.finalPick EQUAL TO closeDoor[closeNumber];
			END SEQUENCE

			SEQUENCE statistic data
				IF game.finalPick IS EQUAL TO carDoor THEN
        			game.won EQUAL TO true;
    
				IF game.finalPick IS EQUAL TO game.doorPicked AND game.won THEN
					INCREMENT stat.gamesWithSameDoorWon;
					
				IF game.finalPick IS EQUAL TO game.doorPicked AND IS NOT game.won THEN
					INCREMENT stat.gamesWithSameDoorLost;    
					
				IF game.finalPick IS NOT EQUAL TO game.doorPicked AND game.won THEN
					INCREMENT stat.gamesWithDoorChangeWon;
					
				IF game.finalPick IS NOT EQUAL TO game.doorPicked AND IS NOT game.won THEN
					INCREMENT stat.gamesWithDoorChangeLost;
			END SEQUENCE
		END FOR
	END SEQUENCE

			SEQUENCE statistic result
				SET stayWin EQUAL TO ((stat.gamesWithSameDoorWon MULTIPLY BY 100) DIVIDE BY (stat.gamesWithSameDoorWon ADD TO stat.gamesWithSameDoorLost)).toFixed(2);
				SET switchWin EQUAL TO ((stat.gamesWithDoorChangeWon MULTIPLY BY 100) DIVIDE (stat.gamesWithDoorChangeWon ADD TO stat.gamesWithDoorChangeLost)).toFixed(2);
			END SEQUENCE

			SEQUENCE Display result
				SET console.log(stayWin + " % of games won when not swicthing door.");
				SET console.log(switchWin + " % of games won when swicthing door.");
			END SEQUENCE
		
END